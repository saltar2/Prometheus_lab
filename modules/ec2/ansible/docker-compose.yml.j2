services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=tuemail@ejemplo.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
    post_start:
     - command: ["/bin/bash", "-c", "chmod 600 /mnt/efs/traefik/letsencrypt/acme.json"] 
       user: root
    ports:
      - "80:80"
      - "443:443"
    #  - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/efs/traefik/letsencrypt:/letsencrypt"  # Volumen en EFS para certificados
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web,websecure"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
    restart: unless-stopped


  prometheus:
    command: ["sh", "-c", "sudo chown -R 1000:1000 /prometheus && mkdir -p /prometheus/data && exec prometheus --config.file=/prometheus/config/prometheus.yml --storage.tsdb.path=/prometheus/data --web.config.file=/prometheus/config/web.yml"]
    image: 248189943700.dkr.ecr.eu-west-3.amazonaws.com/grupo2:prometheus-permisos
    #ports:
    #  - "9090:9090"
    volumes:
      - "/mnt/efs/prometheus:/prometheus"  # Volumen en EFS para datos de Prometheus
     
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.routers.prometheus.entrypoints=web,websecure"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

      # Definir un middleware para cambiar el path
      #- "traefik.http.middlewares.prometheus-replacepath.stripprefix.prefixes=/prom"

      # Aplicar el middleware al enrutador de Prometheus
      #- "traefik.http.routers.prometheus.middlewares=prometheus-replacepath@docker"
    depends_on:
      otel-collector:
        condition: service_started
    restart: unless-stopped


  myapp:
    image: 248189943700.dkr.ecr.eu-west-3.amazonaws.com/grupo2:myapp
    environment:
      - ENV=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317  # Aqu√≠ configuramos la variable de entorno
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myapp.tls=true"
      - "traefik.http.routers.myapp.tls.certresolver=myresolver"
      - "traefik.http.routers.myapp.rule=Host(`myapp.{{ server_ip }}.campusdual.mkcampus.com`)&& PathPrefix(`/myapp/`)"
      - "traefik.http.routers.myapp.entrypoints=web,websecure"
      - "traefik.http.services.myapp.loadbalancer.server.port=8000"
    depends_on:
      otel-collector:
        condition: service_started
    restart: unless-stopped


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config", "/otel/conf/otel-collector-config.yml"]
    #ports:
      #- "4317:4317"
      #- "8889:8889"
      #- "13133:13133"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.otel.tls=true"
      - "traefik.http.routers.otel.tls.certresolver=myresolver"
      - "traefik.http.routers.otel.rule=Host(`otel.{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.routers.otel.entrypoints=web,websecure"
      - "traefik.http.services.otel.loadbalancer.server.port=4318"
#      - "traefik.http.services.otel.loadbalancer.server.scheme=https"

      # Definir un middleware para cambiar el path
      #- "traefik.http.middlewares.otel-replacepath.stripprefix.prefixes=/otel"

      # Aplicar el middleware al enrutador de Prometheus
      #- "traefik.http.routers.otel.middlewares=otel-replacepath@docker"
    volumes:
      - "/mnt/efs/otel:/otel"
    restart: unless-stopped

  nagios:
    image: jasonrivers/nagios:latest
    command: ["/bin/bash", "-c", "htpasswd -cb /opt/nagios/etc/htpasswd.users nagiosadmin campusdual && exec /usr/local/bin/start_nagios"]
    container_name: nagios
    #ports:
      #- "8081:80"
    post_start:
     - command: ["/bin/bash", "-c", "mv /nagios/nagios_config/hosts.cfg /nagios/nagios_config/services.cfg /nagios/nagios_config/commands.cfg /opt/nagios/etc/conf.d/ && unzip /nagios/nagios_config/ficheros.zip -d /usr/lib/nagios/plugins/ && chmod -R 755 /usr/lib/nagios/plugins/"] 
       user: root
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nagios.tls=true"
      - "traefik.http.routers.nagios.tls.certresolver=myresolver"
      - "traefik.http.routers.nagios.rule=Host(`nagios.{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.routers.nagios.entrypoints=web,websecure"
      - "traefik.http.services.nagios.loadbalancer.server.port=80"

      # Definir un middleware para cambiar el path
      #- "traefik.http.middlewares.nagios-replacepath.stripprefix.prefixes=/nagiosadmin"

      # Aplicar el middleware al enrutador de Prometheus
      #- "traefik.http.routers.nagios.middlewares=nagios-replacepath@docker"
    volumes:
      - "/mnt/efs/nagios:/nagios" 
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g

  grafana:
    image: grafana/grafana:11.5.2-ubuntu
    container_name: grafana
    restart: unless-stopped
    volumes:
      - type: bind
        source: /mnt/efs/data/grafana
        target: /var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

      # Definir un middleware para cambiar el path
      #- "traefik.http.middlewares.grafana-replacepath.stripprefix.prefixes=/grafana"

      # Aplicar el middleware al enrutador de Prometheus
      #- "traefik.http.routers.grafana.middlewares=grafana-replacepath@docker"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # You can change this to your desired admin password
      - GF_SERVER_ROOT_URL=http://grafana.{{ server_ip }}.campusdual.mkcampus.com/
    user: '0'